[{"/Users/aniscoquelet/Code/fullstackopen/part1/unicafe/src/index.js":"1","/Users/aniscoquelet/Code/fullstackopen/part1/unicafe/src/App.js":"2"},{"size":232,"mtime":1653924764839,"results":"3","hashOfConfig":"4"},{"size":1681,"mtime":1654018908441,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"9"},"7182is",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"/Users/aniscoquelet/Code/fullstackopen/part1/unicafe/src/index.js",[],[],[],"/Users/aniscoquelet/Code/fullstackopen/part1/unicafe/src/App.js",["14","15","16","17"],[],"import { useState, useSyncExternalStore } from \"react\"\n\nconst Title = ({text}) => <h1>{text}</h1>\n\nconst StatisticLine = ({text, value}) => <tr><td>{text}</td><td>{value}</td></tr>\n\nconst Statistics = ({good,neutral,bad}) => \n  {\n\n    if(good != 0 || neutral != 0 || bad != 0){\n      return(\n          <table>\n            <thead>\n            </thead>\n            <tbody>\n              <StatisticLine text = \"Good\" value = {good} />\n              <StatisticLine text = \"Neutral\" value = {neutral} />\n              <StatisticLine text = \"Bad\" value = {bad} />\n              <StatisticLine text = \"Average\" value = {(good-bad)/(good+bad+neutral)} />\n              <StatisticLine text = \"Positive\" value = {(good/(good+bad+neutral)*100)+\"%\"} />\n            </tbody>\n          </table>\n      )\n    }\n    else{\n      return(\n        <>\n          <p>No feedback given.</p>\n        </>\n      )\n    }\n  }\n\nconst Button = ({handleClick, text}) => <button onClick = {handleClick}>{text}</button>\n\n\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => {\n    setGood(good+1)\n  }\n  const handleBad = () => {\n    setBad(bad+1)\n  }\n\n  const handleNeutral = () => {\n    setNeutral(neutral+1)\n  }\n\n  return (\n    <div className=\"App\">\n      <Title text = \"Give Feedback\" />\n      <Button text = \"Good\" handleClick={handleGood}/>\n      <Button text = \"Neutral\" handleClick={handleNeutral}/>\n      <Button text = \"Bad\" handleClick={handleBad}/>\n      <Title text = \"Statistics\" />\n      <Statistics good = {good} bad = {bad} neutral = {neutral} />\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"18","severity":1,"message":"19","line":1,"column":20,"nodeType":"20","messageId":"21","endLine":1,"endColumn":40},{"ruleId":"22","severity":1,"message":"23","line":10,"column":13,"nodeType":"24","messageId":"25","endLine":10,"endColumn":15},{"ruleId":"22","severity":1,"message":"23","line":10,"column":29,"nodeType":"24","messageId":"25","endLine":10,"endColumn":31},{"ruleId":"22","severity":1,"message":"23","line":10,"column":41,"nodeType":"24","messageId":"25","endLine":10,"endColumn":43},"no-unused-vars","'useSyncExternalStore' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]